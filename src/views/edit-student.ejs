<head>
    <title>Edit Student</title>
    <style type="text/tailwindcss">
        @layer base {
            :root {
                --color-primary: #0d0d0d;
                --color-secondary: #121212;
                --color-accent: #1e1e1e;
                --color-card: #1a1a1a;
                --color-text: #e0e0e0;
                --color-text-secondary: #a0a0a0;
                --color-border: #2a2a2a;
                --color-button: #3a3a3a;
                --color-button-hover: #4a4a4a;
                --color-input-bg: #1e1e1e;
                --color-focus-ring: #667eea;
                --color-success: #10b981;
                --color-error: #ef4444;
                --color-warning: #f59e0b;
            }
        }

        @layer components {
            .bg-primary { background-color: var(--color-primary); }
            .bg-secondary { background-color: var(--color-secondary); }
            .bg-accent { background-color: var(--color-accent); }
            .bg-card { 
                background-color: var(--color-card);
                border: 1px solid var(--color-border);
            }
            .bg-input { 
                background-color: var(--color-input-bg);
                border: 1px solid var(--color-border);
            }
            .text-primary { color: var(--color-text); }
            .text-secondary { color: var(--color-text-secondary); }
            .border-primary { border-color: var(--color-border); }
            
            .btn-gradient {
                background-color: var(--color-button);
                border: none;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
                color: var(--color-text);
            }
            .btn-gradient:hover {
                background-color: var(--color-button-hover);
                transform: translateY(-1px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            }
            
            .btn-gradient:active {
                transform: translateY(0);
            }
            
            .btn-danger {
                background-color: var(--color-error);
                color: white;
            }
            
            .btn-danger:hover {
                background-color: #dc2626;
            }
            
            .focus-ring {
                outline: none;
                border-color: var(--color-focus-ring);
                box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
                transition: all 0.2s ease;
            }
            
            .upload-area {
                transition: all 0.3s ease;
                border: 2px dashed var(--color-border);
                background-color: var(--color-accent);
            }
            .upload-area:hover {
                border-color: var(--color-focus-ring);
                background-color: var(--color-button);
            }
            
            .form-input {
                transition: all 0.2s ease;
                border: 1px solid var(--color-border);
                background-color: var(--color-input-bg);
            }
            
            .form-input:hover {
                border-color: var(--color-text-secondary);
            }

            .form-input:focus {
                border-color: var(--color-focus-ring);
                background-color: var(--color-input-bg);
            }
            
            .pulse-ring {
                position: relative;
            }
            
            .pulse-ring::after {
                content: '';
                position: absolute;
                top: -2px;
                left: -2px;
                right: -2px;
                bottom: -2px;
                border: 2px solid var(--color-focus-ring);
                border-radius: 9999px;
                animation: pulse 1.5s ease-out infinite;
                opacity: 0;
            }
            
            @keyframes pulse {
                0% {
                    transform: scale(0.95);
                    opacity: 0.7;
                }
                70% {
                    transform: scale(1.05);
                    opacity: 0.2;
                }
                100% {
                    transform: scale(1.1);
                    opacity: 0;
                }
            }
        }
    </style>
</head>

<body class="bg-primary text-primary min-h-screen p-4">
    <!-- Toast Container -->
    <div id="toast-container" class="fixed top-6 right-6 z-50 space-y-3"></div>


    <div class="max-w-4xl mx-auto py-4">
        <!-- Header with Back Button -->
        <div class="flex items-center justify-between mb-6">
            <a href="/students" class="flex items-center text-secondary hover:text-primary transition">
                <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to Students
            </a>
        </div>

        <!-- Main Header -->
        <div class="text-center mb-6 slide-in">
            <h1 class="text-3xl font-bold mb-2 text-primary">
                Edit Student
            </h1>
            <p class="text-secondary">Update the details below for this student</p>
        </div>

        <!-- Main Form Card -->
        <div class="bg-card rounded-xl shadow-lg p-6 slide-in">
            <form id="studentForm" class="grid grid-cols-1 lg:grid-cols-2 gap-6" enctype="multipart/form-data">
                <!-- Left Side - Profile Picture Upload -->
                <div class="flex flex-col items-center justify-center space-y-4">
                    <div class="text-center">
                        <h3 class="text-lg font-semibold mb-1 text-primary">Profile Picture</h3>
                        <p class="text-secondary text-sm">Upload a new photo</p>
                    </div>

                    <div class="relative">
                        <div class="upload-area rounded-xl p-4 text-center cursor-pointer relative group"
                            onclick="document.getElementById('profile').click()">
                            <div class="relative w-32 h-32 mx-auto mb-3">
                                <img id="profile-preview"
                                    src="<%= student.profile ? '/uploads/' + student.profile : '/uploads/user.png' %>"
                                    class="w-full h-full rounded-xl object-cover shadow-md transition-all duration-300 group-hover:scale-105"
                                    onerror="this.src='/uploads/user.png'">
                                <div
                                    class="absolute inset-0 bg-black/30 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                    <div class="text-white text-center">
                                        <svg class="w-6 h-6 mx-auto mb-1" fill="none" stroke="currentColor"
                                            viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                        </svg>
                                        <p class="text-xs font-medium">Change Photo</p>
                                    </div>
                                </div>
                            </div>

                            <div class="text-center">
                                <div
                                    class="inline-flex items-center px-3 py-2 bg-accent border border-primary rounded-lg text-primary font-medium shadow hover:bg-button transition-all duration-300">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12">
                                        </path>
                                    </svg>
                                    Change Photo
                                </div>
                                <p class="text-xs text-secondary mt-2">JPG, PNG up to 5MB</p>
                            </div>
                        </div>
                        <input type="file" id="profile" name="profile" accept="image/*" class="hidden"
                            onchange="previewImage(this)">
                    </div>
                </div>

                <!-- Right Side - Student Details -->
                <div class="space-y-4">
                    <div>
                        <h3 class="text-lg font-semibold mb-4 text-primary">Student Information</h3>
                    </div>

                    <!-- Name Field -->
                    <div class="space-y-1">
                        <label for="name" class="block text-sm font-medium text-secondary">Full Name *</label>
                        <input type="text" name="name" id="name" value="<%= student.name %>"
                            placeholder="Enter student's full name" required
                            class="w-full px-3 py-2 form-input rounded-lg focus-ring text-primary placeholder-gray-500" />
                            <input type="hidden" name="id" id="id" value="<%= student.id %>">
                    </div>

                    <!-- Age Field -->
                    <div class="space-y-1">
                        <label for="age" class="block text-sm font-medium text-secondary">Age *</label>
                        <input type="number" name="age" id="age" value="<%= student.age %>" placeholder="Enter age"
                            required min="5" max="99"
                            class="w-full px-3 py-2 form-input rounded-lg focus-ring text-primary placeholder-gray-500" />
                    </div>

                    <!-- Email Field -->
                    <div class="space-y-1">
                        <label for="email" class="block text-sm font-medium text-secondary">Email Address *</label>
                        <input type="email" name="email" id="email" value="<%= student.email %>"
                            placeholder="Enter email address" required
                            class="w-full px-3 py-2 form-input rounded-lg focus-ring text-primary placeholder-gray-500" />
                    </div>

                    <!-- Phone Number Field -->
                    <div class="space-y-1">
                        <label for="phone" class="block text-sm font-medium text-secondary">Phone Number</label>
                        <input type="tel" name="phone" id="phone" value="<%= student.phone %>"
                            placeholder="Enter phone number" pattern="[0-9]{10}"
                            title="Please enter a 10-digit phone number"
                            class="w-full px-3 py-2 form-input rounded-lg focus-ring text-primary placeholder-gray-500" />
                    </div>

                    <!-- Submit Button -->
                    <div class="pt-4">
                        <button type="submit" id="submitBtn"
                            class="w-full btn-gradient py-3 px-4 rounded-lg font-semibold shadow-md hover:shadow-lg transition-all duration-300 flex items-center justify-center space-x-2">
                            <svg id="submitIcon" class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M5 13l4 4L19 7"></path>
                            </svg>
                            <span id="submitText">Update Student</span>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Enhanced image preview with validation
        function previewImage(input) {
            const preview = document.getElementById('profile-preview');
            const file = input.files[0];

            if (!file) {
                return;
            }

            // Validate file size (5MB max)
            if (file.size > 5 * 1024 * 1024) {
                showToast('File size must be less than 5MB', 'error');
                input.value = '';
                return;
            }

            // Validate file type
            if (!file.type.startsWith('image/')) {
                showToast('Please select a valid image file', 'error');
                input.value = '';
                return;
            }

            const reader = new FileReader();
            reader.onloadend = function () {
                preview.src = reader.result;
                preview.parentElement.classList.add('pulse-ring');
                setTimeout(() => {
                    preview.parentElement.classList.remove('pulse-ring');
                }, 1000);
            }
            reader.readAsDataURL(file);
        }

        // Enhanced focus effects
        document.querySelectorAll('.form-input').forEach(input => {
            input.addEventListener('focus', function () {
                this.classList.add('focus-ring');
                this.parentElement.querySelector('label').style.color = '#667eea';
            });

            input.addEventListener('blur', function () {
                this.classList.remove('focus-ring');
                this.parentElement.querySelector('label').style.color = '#a0a0a0';
            });
        });

        // Enhanced form submission
        document.getElementById('studentForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const id = document.getElementById('id').value;
            const submitBtn = document.getElementById('submitBtn');
            const submitText = document.getElementById('submitText');
            const submitIcon = document.getElementById('submitIcon');
            const form = e.target;

            // Disable submit button with loading state
            submitBtn.disabled = true;
            submitBtn.classList.add('opacity-75', 'cursor-not-allowed');
            submitText.textContent = 'Updating...';
            submitIcon.innerHTML = `
                <svg class="animate-spin w-5 h-5" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
            `;

            try {
                const formData = new FormData(form);

                const response = await fetch(`/update/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                const data = await response.json();

                if (response.ok) {
                    showToast(data.message, 'success');
                    setTimeout(() => {
                        window.location.replace(data.redirectUrl);
                    }, 1500);
                } else {
                    const result = await response.json();
                    const errorMsg = result.message || 'Failed to update student';
                    showToast(errorMsg, 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('Network error. Please check your connection and try again.', 'error');
            } finally {
                submitBtn.disabled = false;
                submitBtn.classList.remove('opacity-75', 'cursor-not-allowed');
                submitText.textContent = 'Update Student';
                submitIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>`;
            }
        });

        function showToast(message, type = 'success') {
            const toastContainer = document.getElementById('toast-container');
            const toastId = 'toast-' + Date.now();

            const toastConfig = {
                success: { bg: 'bg-green-600', icon: '✓' },
                error: { bg: 'bg-red-600', icon: '✗' },
                warning: { bg: 'bg-yellow-600', icon: '⚠' },
                info: { bg: 'bg-blue-600', icon: 'ℹ' }
            };

            const config = toastConfig[type] || toastConfig.info;

            const toast = document.createElement('div');
            toast.id = toastId;
            toast.className = `${config.bg} text-white px-4 py-3 rounded-lg shadow-lg transform translate-x-full transition-all duration-300 ease-out flex items-center space-x-2 min-w-72`;

            toast.innerHTML = `
                <span class="font-bold text-lg">${config.icon}</span>
                <span class="flex-1">${message}</span>
                <button onclick="removeToast('${toastId}')" class="text-white/80 hover:text-white text-lg font-bold">×</button>
            `;

            toastContainer.appendChild(toast);

            // Animate in
            setTimeout(() => {
                toast.classList.remove('translate-x-full');
                toast.classList.add('translate-x-0');
            }, 100);

            setTimeout(() => {
                removeToast(toastId);
            }, 4000);
        }

        function removeToast(toastId) {
            const toast = document.getElementById(toastId);
            if (toast) {
                toast.classList.add('translate-x-full');
                setTimeout(() => {
                    toast.remove();
                }, 300);
            }
        }
    </script>
</body>

</html>