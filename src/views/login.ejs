<head>
    <title>Login</title>
    <style type="text/tailwindcss">
        @layer base {
            :root {
                --color-primary: #0d0d0d; /* Perfect black */
                --color-secondary: #121212; /* Dark gray */
                --color-accent: #1e1e1e; /* Slightly lighter gray */
                --color-text: #e0e0e0; /* Light gray text */
                --color-text-secondary: #a0a0a0; /* Secondary text */
                --color-border: #2a2a2a; /* Border color */
                --color-button: #3a3a3a; /* Button color */
                --color-button-hover: #4a4a4a; /* Button hover */
                --color-success: #10b981; /* Success green */
                --color-error: #ef4444; /* Error red */
            }
        }

        @layer components {
            .bg-primary {
                background-color: var(--color-primary);
            }
            .bg-secondary {
                background-color: var(--color-secondary);
            }
            .bg-accent {
                background-color: var(--color-accent);
            }
            .text-primary {
                color: var(--color-text);
            }
            .text-secondary {
                color: var(--color-text-secondary);
            }
            .border-primary {
                border-color: var(--color-border);
            }
            .button-primary {
                background-color: var(--color-button);
                color: var(--color-text);
            }
            .button-primary:hover {
                background-color: var(--color-button-hover);
            }
            
            /* Toast styles */
            .toast {
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 12px 20px;
                border-radius: 6px;
                color: white;
                font-size: 14px;
                font-weight: 500;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
                z-index: 1000;
                transform: translateX(200%);
                transition: transform 0.3s ease-in-out;
            }
            .toast.show {
                transform: translateX(0);
            }
            .toast.success {
                background-color: var(--color-success);
            }
            .toast.error {
                background-color: var(--color-error);
            }
        }
    </style>
</head>
<body class="bg-primary text-primary min-h-screen flex items-center justify-center p-4">
    <!-- Toast container -->
    <div id="toastContainer"></div>
    
    <div class="w-full max-w-6xl rounded-xl overflow-hidden shadow-2xl flex flex-col md:flex-row">
        <!-- Left Side - Image and Company Details -->
        <div class="bg-accent p-8 md:p-12 md:w-1/2 flex flex-col items-center justify-center">
            <div class="mb-8">
                <img src="/logo-light.png" alt="Company Logo" class="w-32 h-32 rounded-full object-cover mx-auto">
            </div>
            <h1 class="text-3xl font-bold text-center mb-4">TechLift</h1>
            <p class="text-secondary text-center max-w-md">
                From Fundamentals to Mastery, TechLift is Your Launchpad to Becoming a Future-Ready Developer.
            </p>
            <div class="mt-8 flex space-x-4">
                <a href="#" class="text-secondary hover:text-primary transition">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-facebook"><path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path></svg>
                </a>
                <a href="#" class="text-secondary hover:text-primary transition">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-twitter"><path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path></svg>
                </a>
                <a href="#" class="text-secondary hover:text-primary transition">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-linkedin"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle></svg>
                </a>
            </div>
        </div>

        <!-- Right Side - Login Form -->
        <div class="bg-secondary p-8 md:p-12 md:w-1/2">
            <h2 class="text-2xl font-bold mb-6">Welcome Back</h2>
            <p class="text-secondary mb-8">Please enter your credentials to login.</p>
            
            <form id="loginForm" class="space-y-6">
                <div>
                    <label for="email" class="block text-sm font-medium mb-2">Email Address</label>
                    <input type="email" id="email" name="email" required
                        class="w-full px-4 py-3 rounded-lg bg-accent border border-primary focus:outline-none focus:ring-2 focus:ring-gray-500 transition" 
                        placeholder="your@email.com">
                </div>
                
                <div>
                    <label for="password" class="block text-sm font-medium mb-2">Password</label>
                    <input type="password" id="password" name="password" required
                        class="w-full px-4 py-3 rounded-lg bg-accent border border-primary focus:outline-none focus:ring-2 focus:ring-gray-500 transition" 
                        placeholder="••••••••">
                </div>
                
                <div class="flex items-center justify-end">                 
                    <div class="text-sm">
                        <a href="#" class="font-medium text-primary hover:text-white transition">Forgot password?</a>
                    </div>
                </div>
                
                <div>
                    <button type="submit" id="submitBtn" class="w-full button-primary py-3 px-4 rounded-lg font-medium transition flex items-center justify-center">
                        <span id="btnText">Sign in</span>
                        <svg id="spinner" class="hidden w-5 h-5 ml-2 text-white animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    </button>
                </div>
            </form>
            
            <div class="mt-8 text-center">
                <p class="text-secondary">
                    Don't have an account? 
                    <a href="/signup" class="font-medium text-primary hover:text-white transition">Sign up</a>
                </p>
            </div>
        </div>
    </div>

    <script>
        // Toast notification function
        function showToast(message, type = 'success') {
            const toastContainer = document.getElementById('toastContainer');
            const toast = document.createElement('div');
            toast.className = `toast ${type} show`;
            toast.textContent = message;
            toastContainer.appendChild(toast);
            
            // Remove toast after 5 seconds
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    toast.remove();
                }, 300);
            }, 5000);
        }

        // Form submission with fetch
        document.getElementById('loginForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            
            const submitBtn = document.getElementById('submitBtn');
            const btnText = document.getElementById('btnText');
            const spinner = document.getElementById('spinner');
            
            // Show loading state
            submitBtn.disabled = true;
            btnText.textContent = 'Signing in...';
            spinner.classList.remove('hidden');
            
            // Get form values
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            
            // Basic client-side validation
            if (!email || !password) {
                showToast('Please fill in all fields', 'error');
                submitBtn.disabled = false;
                btnText.textContent = 'Sign in';
                spinner.classList.add('hidden');
                return;
            }

            try {
                // Send data to backend
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        email: email,
                        password: password
                    }),
                    credentials: 'include'
                });

                const data = await response.json();
                console.log(data)

                if (response.ok) {
                    showToast('Login successful! Redirecting...');
                    
                    if (data.token) {
                        localStorage.setItem('authToken', data.token);
                    }
                    
                    setTimeout(() => {
                        window.location.href = data.redirectUrl;
                    }, 1000);
                } else {
                    showToast(data.message || 'Login failed. Please check your credentials.', 'error');
                    submitBtn.disabled = false;
                    btnText.textContent = 'Sign in';
                    spinner.classList.add('hidden');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('Network error. Please try again.', 'error');
                submitBtn.disabled = false;
                btnText.textContent = 'Sign in';
                spinner.classList.add('hidden');
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            const urlParams = new URLSearchParams(window.location.search);
            const registered = urlParams.get('registered');
            
            if (registered === 'true') {
                showToast('Registration successful! Please log in.', 'success');
            }
        });
    </script>
</body>